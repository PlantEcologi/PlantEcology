[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BIO3018F Ecology & Evolution - 2023 Practical",
    "section": "",
    "text": "This section covers the analysis and write-up of the practical we did on Biodiversity and Ecosystem Function in the Cape Floristic Region.\nI provide R code below, which you can run on your own laptops if you have R installed (and it helps to have RStudio or similar). Alternatively, you can sign up for an account on Posit Cloud, which allows you to run the code on a cloud machine from your internet browser. Make sure to use your university email address as it allows you more free resources."
  },
  {
    "objectID": "index.html#mission",
    "href": "index.html#mission",
    "title": "BIO3018F Ecology & Evolution",
    "section": "Mission",
    "text": "Mission\nWe aim to produce graduates who are ecologically and data literate, engaged, and have the wit to never stop questioning the “facts” presented in whatever walk of life they choose.\nWe hope to cultivate a sense of environmental consciousness and biophilia in our students and others, ultimately sharing “the pleasure of finding things out” sensu Richard Feynman."
  },
  {
    "objectID": "index.html#materials",
    "href": "index.html#materials",
    "title": "BIO3018F Ecology & Evolution",
    "section": "Materials",
    "text": "Materials\nThis section points to our teaching resources, but they’re mostly hosted elsewhere. The plan is to embed them in this webpage in future. Most are provided under a CC BY 4.0 license, so feel free to reuse unless otherwise indicated. If you’re not sure, get in touch.\n\nHonours (4th year) modules (BIO4000W/BIO4001W)\n\nIntroduction to data management and reporoducible research (bookdown site)\nIntroduction to GIS and handling spatial data with R (bookdown site)\n\n\n\nThird-year courses\n\nEcology & Evolution (BIO3018F): Measuring Biodiversity (Git repo incl. pdf lectures)\nQuantitative Biology (BIO3019S): Ecological Forecasting (bookdown site)\n\n\n\nOther materials\n\nData skills (website)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html#lectures",
    "href": "index.html#lectures",
    "title": "BIO3018F Ecology & Evolution",
    "section": "Lectures",
    "text": "Lectures\nPDFs of my 2023 lectures are currently available through the course GitHub repository. I hope to add them as HTML slides that you can view here at a later stage…"
  },
  {
    "objectID": "index.html#practical",
    "href": "index.html#practical",
    "title": "BIO3018F Ecology & Evolution",
    "section": "Practical",
    "text": "Practical\nThe rest of this section covers the analysis and write-up of the practical we did on Biodiversity and Ecosystem Function in the Cape Floristic Region.\nI provide R code below, which you can run on your own laptops if you have R installed (and it helps to have RStudio or similar). Alternatively, you can sign up for an account on Posit Cloud, which allows you to run the code on a cloud machine from your internet browser. Make sure to use your university email address as it allows you more free resources."
  },
  {
    "objectID": "index.html#field-methods",
    "href": "index.html#field-methods",
    "title": "BIO3018F Ecology & Evolution - 2023 Practical",
    "section": "Field Methods",
    "text": "Field Methods\nThe sites were selected to represent contrasting vegetation, differing either in their abiotic template or degree to which they have been modified, but to all be the same (or similar) post-fire age (time since last fire). We will split into 4 teams of 2 or 3. Each pair will survey a point location (towards the corners) within the 250 by 250m MODIS satellite mission pixel that makes up each site.\nEach team will need:\n\nOne or more smartphones\n2 x 10m measuring tape (or longer)\n1 x clipboard, paper and pen or pencil\n1 x densiometer\n1 x metre rule\n1 x Vernier calipers\n8 x large plastic bags for carrying soil and plant samples for each point location\n8 x soil sample bags\n2 x masking tape\n2 x marker pen\n\nAt each site, navigate to your team’s point location, lay out the two tapes at 90 degrees, crossing at 3.2m and ending at 6.4m. Consider this your guide for a 3.2m radius (~20m2) circle. Within the circle we will measure:\n\nEnvironmental conditions:\n\n\nEstimate % projected cover (think the area you would see from above) bare soil\nTake a densiometer reading at ground level. To do this, hold the densiometer level on the soil surface. Pick a spot close to the centre, but try not to pick an obviously open (or closed) patch, it should be representative of the location. To take a reading, split each square into quarters and score them for the amount of light visible - a value from 0 (complete canopy cover) to 4 (no vegetation visible) - counting up these values for all 24 squares (to a maximum of 96), and write this down. We will convert this to canopy cover later, applying the formula \\(100 - 1.04*X\\), where \\(X\\) is your reading.\nTake a soil sample (we are going to pool the 4 samples per site). These we will process for soil pH.\nDo a dung count, scoring dung for the point location by the number of quarters where you find dung (i.e. a single score from 0-4 for the point location). Try to avoid scoring obvious single scat (“dung creation”) events in more than one quadrat, unless it’s an impressive pile.\nTake a few notes (and photos) on any other features that you think may be important or interesting (slope, rockiness, whatever).\n\n\n\nDiversity sampling:\n\n\nFirst, make sure your smartphone is fully charged and set to record GPS location with your photographs!\nWith your team, decide on which are the top 5 species by % projected cover. If your site is dominated by fewer than 5 species, count up as many species as make up 80% of the vegetation.\n\nTake diagnostic photos for the 5 species (habit (whole plant), leaf, base, flowers and/or fruits).\nFor each of three individuals of your 5 target species, measure the height and canopy diameter in 2 dimensions (perpendicular). Then collect shoots for measuring leaf traits back at the lab (leaf length, width, area and dry mass). You need to collect enough to be able to process at least 3 leaves per sample (more if the species has tiny leaves). Mark each sample with masking tape and put in sample bag for the site.\n\nFinally, set a timer and take as many photos of new species (other than your 5 target species) within or near your plot as you can before the alarm goes off. Make sure to take a photo of your site label on your sample bag between sites so you know which photos were collected at which sites. When we get back to base you will upload the photos to folders in the intranet labeled by site."
  },
  {
    "objectID": "index.html#ecosystem-function",
    "href": "index.html#ecosystem-function",
    "title": "BIO3018F Ecology & Evolution - 2023 Practical",
    "section": "Ecosystem function",
    "text": "Ecosystem function\nTo explore ecosystem function we looked at the 20-year time series of the Normalized Difference Vegetation Index (NDVI) recorded by the MODIS satellite mission. From these we used the post-fire recovery trajectory modelling framework developed by Wilson et al. (2015) to derive estimates of a series of parameters that we will use as our measures of ecosystem function. These are illustrated in the figure and explained below:\n\n\n\n\n\nStylized postfire recovery curve from Slingsby et al. (2020).\n\n\n\n\n\nalpha = starting NDVI after a fire (lower stippled line )\ngamma = the difference between alpha and the asymptote of NDVI (i.e. alpha + gamma = estimated steady long-term NDVI (upper stippled line))\nlambda = 1/recovery rate after fire (i.e. the smaller the value the faster the rate of recovery)\nA = the magnitude of seasonality (the absolute value indicates the magnitude, ignore the sign (+/-) for now)\nphi = the timing of seasonality"
  },
  {
    "objectID": "index.html#species-alpha-diversity",
    "href": "index.html#species-alpha-diversity",
    "title": "BIO3018F Ecology & Evolution - 2023 Practical",
    "section": "Species Alpha Diversity",
    "text": "Species Alpha Diversity\nFor this I have just taken the count of species encountered at each point during our rapid photographic surveys, and the aggregated set of unique species for each site (i.e. no rarefaction etc).\n\nDiscussion hint: Do you think this is an issue for the method we used? Are there any biases we may have introduced? Justify your answer.\n\n\nSites\nR code:\n\n# Call libraries (you may need to uncomment and run the first line to install them)\n\n#install.packages(c(\"tidyverse\", \"readxl\", \"knitr\", \"FSA\", \"picante\", \"sf\", \"MODISTools\"))\n\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(knitr)\nlibrary(FSA)\nlibrary(picante)\n\n# Read in data\nsdat &lt;- read_xlsx(\"data/pracdatasheet2023.xlsx\", sheet = \"Species2023\")\n\n# Select indigenous or invasive species only\n#sdat &lt;- sdat %&gt;% filter(is.na(Alien))\n#sdat &lt;- sdat %&gt;% filter(Alien == 1)\n\n# Get list of species by site\n#dat %&gt;% select(Site,FullName) %&gt;% unique() %&gt;% View()\n\n# Get count of species by site\nsite_SD &lt;- sdat %&gt;% \n#  filter(Point == \"SE\") %&gt;% # If you wnt to select only one corner - SE in this case\n  select(Site, FullName) %&gt;% \n  unique() %&gt;%\n  group_by(Site) %&gt;%\n  summarize(`Species Number` = n())\n\n# Present as a table\nkable(site_SD)\n\n\n\n\nSite\nSpecies Number\n\n\n\n\ngrass\n17\n\n\ninvasion\n15\n\n\nrenosterveld\n19\n\n\nsand\n25\n\n\nsandstone\n24\n\n\n\n\n\n\n\nPoint locations\nR code:\n\n#  Get count of species by point\npoint_SD &lt;- sdat %&gt;%\n  mutate(PointName = paste(Site, Point, sep = \"_\")) %&gt;%\n  select(PointName, FullName) %&gt;%\n  unique() %&gt;%\n  group_by(PointName) %&gt;%\n  summarize(`Species Number` = n())\n\n# Present as a table\nkable(point_SD)\n\n\n\n\nPointName\nSpecies Number\n\n\n\n\ngrass_NE\n4\n\n\ngrass_NW\n7\n\n\ngrass_SE\n3\n\n\ngrass_SW\n9\n\n\ninvasion_NE\n10\n\n\ninvasion_NW\n6\n\n\ninvasion_SE\n8\n\n\ninvasion_SW\n6\n\n\nrenosterveld_NE\n6\n\n\nrenosterveld_NW\n13\n\n\nrenosterveld_SE\n9\n\n\nrenosterveld_SW\n6\n\n\nsand_NE\n12\n\n\nsand_NW\n9\n\n\nsand_SE\n18\n\n\nsand_SW\n8\n\n\nsandstone_NE\n7\n\n\nsandstone_NW\n11\n\n\nsandstone_SE\n19\n\n\nsandstone_SW\n7"
  },
  {
    "objectID": "index.html#species-beta-diversity",
    "href": "index.html#species-beta-diversity",
    "title": "BIO3018F Ecology & Evolution - 2023 Practical",
    "section": "Species Beta Diversity",
    "text": "Species Beta Diversity\nHere I calculate species beta diversity using Sorenson’s distance.\n\nDiscussion hint: Why can’t we do Bray-Curtis? What would we gain if we could?\n\n\nSites\nR code:\n\n# Make a community data matrix\nsite_comm &lt;- sdat %&gt;%\n  mutate(Abundance = 1) %&gt;%\n  select(Site, FullName, Abundance) %&gt;%\n  unique() %&gt;%\n  pivot_wider(names_from = FullName, \n              values_from = Abundance,\n              values_fill = 0)\n\n# This requires some tomfoolery to set the row names from the first column to get the community data into the desired format for the designdist() function\nsite_comm &lt;- as.data.frame(unclass(site_comm))\nrownames(site_comm) &lt;- site_comm[,1]\nsite_comm &lt;- site_comm[,-1]\n\n# Calculate Sorenson's distances\nsite_BD &lt;- designdist(site_comm, method = \"(A+B-2*J)/(A+B)\", terms = \"binary\")\n\n# some tomfoolery to present it nicely... (kable() doesn't like class \"dist\" - i.e. distance objects)\nmsite_BD &lt;- as.data.frame(as.matrix(site_BD)) # make it a rectangular table\nmsite_BD[upper.tri(msite_BD, diag = T)] &lt;- NA # set the top-right to \"NA\"\noptions(knitr.kable.NA = '') # set the kable() table printing function to make NA values blank\n\n# Present as a table\nkable(msite_BD, digits = 3)\n\n\n\n\n\ngrass\ninvasion\nrenosterveld\nsand\nsandstone\n\n\n\n\ngrass\n\n\n\n\n\n\n\ninvasion\n0.938\n\n\n\n\n\n\nrenosterveld\n0.778\n0.941\n\n\n\n\n\nsand\n0.952\n0.900\n0.955\n\n\n\n\nsandstone\n0.951\n0.846\n0.953\n0.551\n\n\n\n\n\n\n\n\nPoint locations\nR code:\n\n# Make a community data matrix\npoint_comm &lt;- sdat %&gt;%\n  mutate(PointName = paste(Site, Point, sep = \"_\"), Abundance = 1) %&gt;%\n  select(PointName, FullName, Abundance) %&gt;%\n  unique() %&gt;%\n  pivot_wider(names_from = FullName, \n              values_from = Abundance,\n              values_fill = 0)\n\n# tomfoolery to set the row names from the first column to get the community data into the desired format for the designdist function\npoint_comm &lt;- as.data.frame(unclass(point_comm))\nrownames(point_comm) &lt;- point_comm[,1]\npoint_comm &lt;- point_comm[,-1]\n\n# Calculate Sorenson's distances\npoint_BD &lt;- designdist(point_comm, method = \"(A+B-2*J)/(A+B)\", terms = \"binary\")\n\n# some tomfoolery to present it nicely... (kable() doesn't like class \"dist\" - i.e. distance objects)\nmpoint_BD &lt;- as.data.frame(as.matrix(point_BD)) # make it a rectangular table\nmpoint_BD[upper.tri(mpoint_BD, diag = T)] &lt;- NA # set the top-right to \"NA\"\noptions(knitr.kable.NA = '') # set the kable() table printing function to make NA values blank\n\n# Present as a table\nkable(mpoint_BD, digits = 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngrass_NE\ngrass_NW\ngrass_SE\ngrass_SW\ninvasion_NE\ninvasion_NW\ninvasion_SE\ninvasion_SW\nrenosterveld_NE\nrenosterveld_NW\nrenosterveld_SE\nrenosterveld_SW\nsand_NE\nsand_NW\nsand_SE\nsand_SW\nsandstone_NE\nsandstone_NW\nsandstone_SE\nsandstone_SW\n\n\n\n\ngrass_NE\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngrass_NW\n0.636\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngrass_SE\n0.429\n0.600\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngrass_SW\n0.692\n0.750\n0.667\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninvasion_NE\n0.857\n0.882\n0.846\n0.895\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninvasion_NW\n0.800\n0.846\n0.778\n0.867\n0.500\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninvasion_SE\n0.833\n0.867\n0.818\n0.882\n0.667\n0.286\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninvasion_SW\n0.800\n0.846\n0.778\n0.867\n0.625\n0.333\n0.286\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nrenosterveld_NE\n0.800\n0.692\n0.778\n0.867\n0.875\n0.833\n0.857\n0.833\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nrenosterveld_NW\n0.882\n0.600\n0.875\n0.909\n0.913\n0.895\n0.905\n0.895\n0.579\n\n\n\n\n\n\n\n\n\n\n\n\n\nrenosterveld_SE\n0.846\n0.625\n0.833\n0.889\n0.895\n0.867\n0.882\n0.867\n0.733\n0.545\n\n\n\n\n\n\n\n\n\n\n\n\nrenosterveld_SW\n0.800\n0.538\n0.778\n0.867\n0.875\n0.833\n0.857\n0.833\n0.833\n0.474\n0.333\n\n\n\n\n\n\n\n\n\n\n\nsand_NE\n0.875\n0.895\n0.867\n0.905\n0.909\n0.889\n0.900\n0.889\n0.889\n0.920\n0.905\n0.889\n\n\n\n\n\n\n\n\n\n\nsand_NW\n0.846\n0.875\n0.833\n0.889\n0.789\n0.867\n0.882\n0.733\n0.867\n0.909\n0.889\n0.867\n0.524\n\n\n\n\n\n\n\n\n\nsand_SE\n0.909\n0.920\n0.905\n0.926\n0.857\n0.917\n0.923\n0.833\n0.917\n0.935\n0.926\n0.917\n0.400\n0.556\n\n\n\n\n\n\n\n\nsand_SW\n0.833\n0.867\n0.818\n0.882\n0.778\n0.857\n0.875\n0.714\n0.857\n0.905\n0.882\n0.857\n0.700\n0.529\n0.692\n\n\n\n\n\n\n\nsandstone_NE\n0.818\n0.857\n0.800\n0.875\n0.882\n0.846\n0.867\n0.846\n0.846\n0.900\n0.875\n0.846\n0.684\n0.875\n0.840\n0.733\n\n\n\n\n\n\nsandstone_NW\n0.867\n0.889\n0.857\n0.900\n0.810\n0.882\n0.789\n0.882\n0.882\n0.917\n0.900\n0.882\n0.565\n0.700\n0.793\n0.789\n0.444\n\n\n\n\n\nsandstone_SE\n0.913\n0.923\n0.909\n0.929\n0.862\n0.920\n0.852\n0.920\n0.920\n0.938\n0.929\n0.920\n0.613\n0.714\n0.568\n0.852\n0.615\n0.467\n\n\n\n\nsandstone_SW\n0.818\n0.857\n0.800\n0.875\n0.882\n0.846\n0.733\n0.846\n0.846\n0.900\n0.875\n0.846\n0.789\n0.750\n0.920\n0.733\n0.571\n0.556\n0.538"
  },
  {
    "objectID": "index.html#trait-means",
    "href": "index.html#trait-means",
    "title": "BIO3018F Ecology & Evolution - 2023 Practical",
    "section": "Trait means",
    "text": "Trait means\nRecall that I discussed the difference between direct trait effects and diversity effects in the lecture on Biodiversity and Ecosystem Function. Here I calculate the Community Weighted Mean (CWM) values for the traits we sampled. Note that the “weighted” indicates that the trait means are usually weighted by species abundance, cover, biomass etc. Since we only have presence/absence data wll weights will be 1.\nFirstly, by site.\nR code:\n\n# Read in data\ntdat &lt;- read_xlsx(\"data/pracdatasheet2023.xlsx\", sheet = \"Traits2023\")\n\n# Extract species trait means \ntraitspecies &lt;- tdat %&gt;% \n  group_by(FullName) %&gt;%\n  summarize(PlantHeight_cm = mean(PlantHeight_cm, na.rm = T), \n            LeafLength_mm = mean(LeafLength_mm, na.rm = T), \n            LeafDryMass_g = mean(LeafDryMassPerLeaf_g, na.rm = T),\n            LeafMassPerLength = mean(LeafDryMassPerLeaf_g, na.rm = T)/mean(LeafLength_mm, na.rm = T)) %&gt;%\n  na.omit() # Drop and NA entries\n\n# Get list of species by site\ntrsite &lt;- tdat %&gt;% select(Site, FullName) %&gt;% unique()\n\n# Join list of species by site to the trait means and add column of weights\ntraitsite &lt;- left_join(trsite, traitspecies) %&gt;% mutate(Weights = 1)\n\n# Calculating CWM \nsitecwm &lt;-   # New dataframe where we can inspect the result\ntraitsite %&gt;%   # First step in the next string of statements\ngroup_by(Site) %&gt;%   # Groups the summary file by site\nsummarize(           # Coding for how we want our CWMs summarized\nHeight_cwm = weighted.mean(PlantHeight_cm, Weights, na.rm = T),   # Actual calculation of CWMs\nLeafLength_cwm = weighted.mean(LeafLength_mm, Weights, na.rm = T),\nLeafDryMass_cwm = weighted.mean(LeafDryMass_g, Weights, na.rm = T),\nLeafMassPerLength_cwm = weighted.mean(LeafMassPerLength, Weights, na.rm = T)\n)\n\n# Present as a table\nkable(sitecwm, digits = 3)\n\n\n\n\n\n\n\n\n\n\n\nSite\nHeight_cwm\nLeafLength_cwm\nLeafDryMass_cwm\nLeafMassPerLength_cwm\n\n\n\n\ngrass\n131.843\n10.867\n0.107\n0.016\n\n\ninvasion\n260.415\n22.653\n0.308\n0.012\n\n\nrenosterveld\n40.000\n15.169\n0.059\n0.005\n\n\nsand\n102.345\n14.651\n0.458\n0.020\n\n\nsandstone\n91.787\n96.312\n0.469\n0.014\n\n\n\n\n\nSome of these numbers look quite surprising, but you can have a look at the individual objects we created by typing them into your R console, e.g. traitsite.\nNow, by point.\nR code:\n\n# Get list of species by point\ntrpoint &lt;- tdat %&gt;% select(SitePoint, FullName) %&gt;% unique()\n\n# Join list of species by site to the trait means and add column of weights\ntraitpoint &lt;- left_join(trpoint, traitspecies) %&gt;% mutate(Weights = 1)\n\n# Calculating CWM \npointcwm &lt;-   # New dataframe where we can inspect the result\ntraitpoint %&gt;%   # First step in the next string of statements\ngroup_by(SitePoint) %&gt;%   # Groups the summary file by site\nsummarize(           # Coding for how we want our CWMs summarized\nHeight_cwm = weighted.mean(PlantHeight_cm, Weights, na.rm = T),   # Actual calculation of CWMs\nLeafLength_cwm = weighted.mean(LeafLength_mm, Weights, na.rm = T),\nLeafDryMass_cwm = weighted.mean(LeafDryMass_g, Weights, na.rm = T),\nLeafMassPerLength_cwm = weighted.mean(LeafMassPerLength, Weights, na.rm = T)\n)\n\n# Present as a table\nkable(pointcwm, digits = 3)\n\n\n\n\n\n\n\n\n\n\n\nSitePoint\nHeight_cwm\nLeafLength_cwm\nLeafDryMass_cwm\nLeafMassPerLength_cwm\n\n\n\n\ngrass_NE\n39.796\n27.033\n0.064\n0.002\n\n\ngrass_NW\n127.522\n15.273\n0.101\n0.011\n\n\ngrass_SE\n21.944\n11.067\n0.241\n0.026\n\n\ngrass_SW\n176.500\n3.100\n0.056\n0.017\n\n\ninvasion_NE\n156.908\n14.564\n0.231\n0.008\n\n\ninvasion_NW\n373.100\n54.486\n0.715\n0.018\n\n\ninvasion_SE\n407.580\n18.689\n0.331\n0.019\n\n\ninvasion_SW\n342.671\n33.138\n0.404\n0.014\n\n\nrenosterveld_NE\n37.033\n13.480\n0.064\n0.004\n\n\nrenosterveld_NW\n54.956\n14.847\n0.064\n0.006\n\n\nrenosterveld_SE\n34.967\n15.233\n0.053\n0.003\n\n\nrenosterveld_SW\n47.533\n16.927\n0.067\n0.006\n\n\nsand_NE\n82.443\n9.947\n0.410\n0.023\n\n\nsand_NW\n79.527\n10.478\n0.421\n0.025\n\n\nsand_SE\n95.355\n21.996\n0.757\n0.027\n\n\nsand_SW\n127.714\n11.937\n0.477\n0.030\n\n\nsandstone_NE\n107.639\n221.248\n1.033\n0.018\n\n\nsandstone_NW\n86.976\n146.391\n0.100\n0.002\n\n\nsandstone_SE\n98.589\n203.793\n0.406\n0.012\n\n\nsandstone_SW\n100.989\n20.447\n0.686\n0.020"
  },
  {
    "objectID": "index.html#functional-alpha-diversity",
    "href": "index.html#functional-alpha-diversity",
    "title": "BIO3018F Ecology & Evolution - 2023 Practical",
    "section": "Functional Alpha Diversity",
    "text": "Functional Alpha Diversity\nHere I’ve estimated Functional Diversity (FD) according to the method of Petchey and Gaston (2002) for each of the points and aggregated sites using only the dominant species for which we measured traits. To apply Petchey and Gaston’s method, we first need to estimate a functional dendrogram representing the functional similarity among species based on the traits we measured.\nR code:\n\n# Extract species trait means and scale them to mean = 0 and sd = 0\ntraits &lt;- tdat %&gt;% \n  group_by(FullName) %&gt;%\n  summarize(PlantHeight_cm = mean(PlantHeight_cm, na.rm = T), \n            LeafLength_mm = mean(LeafLength_mm, na.rm = T), \n            LeafDryMass_g = mean(LeafDryMassPerLeaf_g, na.rm = T),\n            LeafMassPerLength = mean(LeafDryMassPerLeaf_g, na.rm = T)/mean(LeafLength_mm, na.rm = T)) %&gt;%\n  mutate(across(where(is.numeric), scale)) %&gt;% #Note this line is different to \"traitspecies\" above\n  na.omit() # Drop and NA entries\n\n# Use the traits to create a distance matrix for the species\ntrt &lt;- as.matrix(traits[,-1])\nrownames(trt) &lt;- traits$FullName\nD &lt;- dist(trt)\n\n# Use this distance matrix to construct a dendrogram that represents the similarity/dissimilarity among species according to their traits\ntree &lt;- hclust(D,\"average\")\n\n# Transform the dendrogram into an object of class 'phylo' (needed for the next step)\nptree &lt;- as.phylo(tree)\n\n# Remove unnecessary objects to keep the workspace tidy\nrm(trt, D, tree)\n\n# Plot the tree to see the relationships among species\nplot(ptree, cex = 0.45)\n\n\n\n\n\nFD by Site\nR code:\n\n# Make a community data matrix for the sites\nsamp &lt;- tdat %&gt;%                                    # For sites, lumping all points together \n  mutate(PointName = paste(Site, Point, sep = \"_\"), # Make a new name column combining Site and Point\n         Abundance = 1) %&gt;%                         # Use number of point occurrences as \"pseudo-abundance\"\n  select(Site, PointName, FullName, Abundance) %&gt;%  # Select the columns we want\n  unique() %&gt;%                                      # Remove duplicates (there were 3 reps for each species by point)\n  group_by(FullName, Site) %&gt;%                      # For each species within each site...\n  summarize(Abundance = sum(Abundance)) %&gt;%         # ...sum the abundances\n  pivot_wider(names_from = FullName, \n              values_from = Abundance,\n              values_fill = 0) %&gt;%                  # Turn the 3 columns into a species by site community data matrix\n  na.omit()                                         # Drop and NA entries\n\n# Calculate the functional diversity for each site - see ?pd for details. Note that while the function was written for phylogenetic diversity, we've used it for functional diversity.\nsampFD &lt;- pd(samp[,-1], ptree)\n\n# Make pretty and print table for sites\nrownames(sampFD) &lt;- samp$Site\ncolnames(sampFD)[1] &lt;- \"FD\"\nkable(sampFD, digits = 3)\n\n\n\n\n\nFD\nSR\n\n\n\n\ninvasion\n10.696\n11\n\n\nsandstone\n13.244\n12\n\n\nrenosterveld\n5.237\n12\n\n\ngrass\n9.960\n14\n\n\nsand\n9.191\n10\n\n\n\n\n\nRemember the “species richness” (SR) here is the number of dominant species sampled for traits, not all species observed as above.\n\n\nFD by point location:\nR code:\n\n# Make a community data matrix for the points within sites\npointsamp &lt;- tdat %&gt;%                               # For points within sites \n  mutate(PointName = paste(Site, Point, sep = \"_\"), # Make a new name column combining Site and Point\n         Abundance = 1) %&gt;%                         # Use number of occurrences as pseudo-abundance\n  select(PointName, FullName, Abundance) %&gt;%        # Select the 3 columns we want\n  unique() %&gt;%                                      # Remove duplicates (there were 3 reps for each species by point)\n  pivot_wider(names_from = FullName, \n              values_from = Abundance,\n              values_fill = 0)  %&gt;%                 # Turn the 3 columns into a species by point community data matrix\n  na.omit()                                         # Drop and NA entries\n\n# Calculate FD for points\npointsampFD &lt;- pd(pointsamp[,-1], ptree)\n\n# Make pretty and print table for point locations\nrownames(pointsampFD) &lt;- pointsamp$PointName\ncolnames(pointsampFD)[1] &lt;- \"FD\"\nkable(pointsampFD, digits = 3)\n\n\n\n\n\nFD\nSR\n\n\n\n\ngrass_NW\n6.049\n5\n\n\nrenosterveld_NW\n4.406\n5\n\n\ninvasion_NW\n7.266\n4\n\n\nsand_NW\n7.175\n4\n\n\nsandstone_NW\n7.974\n7\n\n\ngrass_SW\n5.611\n5\n\n\nrenosterveld_SW\n4.524\n5\n\n\ninvasion_SW\n8.285\n5\n\n\nsand_SW\n7.167\n5\n\n\nsandstone_SW\n7.803\n5\n\n\ngrass_NE\n3.928\n5\n\n\nrenosterveld_NE\n4.481\n5\n\n\ninvasion_NE\n6.349\n5\n\n\nsand_NE\n7.069\n4\n\n\nsandstone_NE\n10.854\n5\n\n\ngrass_SE\n5.230\n2\n\n\nrenosterveld_SE\n4.153\n5\n\n\ninvasion_SE\n8.744\n5\n\n\nsand_SE\n8.106\n5\n\n\nsandstone_SE\n9.696\n5"
  },
  {
    "objectID": "index.html#functional-beta-diversity",
    "href": "index.html#functional-beta-diversity",
    "title": "BIO3018F Ecology & Evolution - 2023 Practical",
    "section": "Functional Beta Diversity",
    "text": "Functional Beta Diversity\nI’ve estimated functional similarity between sites using the method of Bryant et al. 2008. See help file ?picante::phylosor in R for details to help know how to interpret. Note that while the function was written for phylogenetic similarity, we’ve used it for functional similarity.\nR code:\n\n# calculate functional turnover between sites\nsampBFD &lt;- phylosor(samp[,-1], ptree)\n\n# some tomfoolery to present it nicely... (kable() doesn't like class \"dist\" - i.e. distance objects)\nmsampBFD &lt;- as.data.frame(as.matrix(sampBFD))\ndimnames(msampBFD) &lt;- list(samp$Site, samp$Site)\nmsampBFDl &lt;- msampBFD # make a new object and keep msampBFD, because you can use it with function metaMDS() \nmsampBFDl[upper.tri(msampBFDl, diag = T)] &lt;- NA\noptions(knitr.kable.NA = '') # set table printing function to make NA values blank\nkable(msampBFDl, digits = 3) # print a table\n\n\n\n\n\ninvasion\nsandstone\nrenosterveld\ngrass\nsand\n\n\n\n\ninvasion\n\n\n\n\n\n\n\nsandstone\n0.309\n\n\n\n\n\n\nrenosterveld\n0.423\n0.400\n\n\n\n\n\ngrass\n0.547\n0.423\n0.512\n\n\n\n\nsand\n0.410\n0.542\n0.520\n0.467\n\n\n\n\n\n\nAnd between point locations?\nR code:\n\n# calculate functional turnover between sites\npointsampBFD &lt;- phylosor(pointsamp[,-1], ptree)\n\n# some tomfoolery to present it nicely... (kable() doesn't like class \"dist\" - i.e. distance objects)\npmsampBFD &lt;- as.data.frame(as.matrix(pointsampBFD))\ndimnames(pmsampBFD) &lt;- list(pointsamp$PointName, pointsamp$PointName)\npmsampBFDl &lt;- pmsampBFD # make a new object and keep msampBFD, because you can use it with function metaMDS() \npmsampBFDl[upper.tri(pmsampBFDl, diag = T)] &lt;- NA\noptions(knitr.kable.NA = '') # set table printing function to make NA values blank\nkable(pmsampBFDl, digits = 3) # print a table\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngrass_NW\nrenosterveld_NW\ninvasion_NW\nsand_NW\nsandstone_NW\ngrass_SW\nrenosterveld_SW\ninvasion_SW\nsand_SW\nsandstone_SW\ngrass_NE\nrenosterveld_NE\ninvasion_NE\nsand_NE\nsandstone_NE\ngrass_SE\nrenosterveld_SE\ninvasion_SE\nsand_SE\nsandstone_SE\n\n\n\n\ngrass_NW\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nrenosterveld_NW\n0.705\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninvasion_NW\n0.588\n0.433\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsand_NW\n0.510\n0.600\n0.350\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsandstone_NW\n0.505\n0.597\n0.332\n0.463\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngrass_SW\n0.578\n0.673\n0.393\n0.630\n0.534\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nrenosterveld_SW\n0.727\n0.978\n0.429\n0.594\n0.591\n0.665\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninvasion_SW\n0.664\n0.531\n0.854\n0.454\n0.447\n0.570\n0.526\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsand_SW\n0.471\n0.537\n0.350\n0.874\n0.411\n0.620\n0.532\n0.445\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsandstone_SW\n0.503\n0.584\n0.335\n0.592\n0.496\n0.537\n0.578\n0.444\n0.536\n\n\n\n\n\n\n\n\n\n\n\n\n\ngrass_NE\n0.771\n0.885\n0.451\n0.607\n0.595\n0.707\n0.886\n0.552\n0.561\n0.594\n\n\n\n\n\n\n\n\n\n\n\n\nrenosterveld_NE\n0.706\n0.861\n0.430\n0.610\n0.582\n0.668\n0.874\n0.528\n0.534\n0.580\n0.868\n\n\n\n\n\n\n\n\n\n\n\ninvasion_NE\n0.544\n0.627\n0.535\n0.554\n0.517\n0.665\n0.620\n0.579\n0.513\n0.509\n0.656\n0.622\n\n\n\n\n\n\n\n\n\n\nsand_NE\n0.531\n0.621\n0.353\n0.955\n0.502\n0.636\n0.615\n0.457\n0.881\n0.632\n0.633\n0.617\n0.559\n\n\n\n\n\n\n\n\n\nsandstone_NE\n0.399\n0.442\n0.279\n0.632\n0.774\n0.440\n0.438\n0.373\n0.586\n0.633\n0.456\n0.440\n0.422\n0.636\n\n\n\n\n\n\n\n\ngrass_SE\n0.646\n0.723\n0.404\n0.543\n0.528\n0.622\n0.726\n0.499\n0.502\n0.704\n0.795\n0.735\n0.582\n0.566\n0.419\n\n\n\n\n\n\n\nrenosterveld_SE\n0.726\n0.904\n0.443\n0.595\n0.610\n0.690\n0.923\n0.542\n0.550\n0.596\n0.891\n0.883\n0.642\n0.635\n0.449\n0.755\n\n\n\n\n\n\ninvasion_SE\n0.608\n0.473\n0.830\n0.421\n0.372\n0.522\n0.469\n0.837\n0.463\n0.376\n0.491\n0.470\n0.667\n0.424\n0.317\n0.445\n0.482\n\n\n\n\n\nsand_SE\n0.476\n0.539\n0.329\n0.890\n0.436\n0.635\n0.534\n0.468\n0.881\n0.557\n0.560\n0.536\n0.534\n0.896\n0.601\n0.506\n0.550\n0.437\n\n\n\n\nsandstone_SE\n0.428\n0.478\n0.298\n0.689\n0.824\n0.471\n0.474\n0.397\n0.626\n0.534\n0.495\n0.476\n0.449\n0.693\n0.929\n0.452\n0.487\n0.337\n0.653"
  },
  {
    "objectID": "index.html#environment",
    "href": "index.html#environment",
    "title": "BIO3018F Ecology & Evolution - 2023 Practical",
    "section": "Environment",
    "text": "Environment\nFirst, let’s calculate % canopy cover from the densiometer readings and then look at site-level averages for most variables.\nR code:\n\npdat &lt;- read_xlsx(\"data/pracdatasheet2023.xlsx\", sheet = \"Sites2023\")\nnames(pdat)\n\n [1] \"Site\"            \"Point\"           \"SitePoint\"       \"Densiometer\"    \n [5] \"SoilPH\"          \"SoilColour\"      \"PercentBareSoil\" \"Dung_Eland\"     \n [9] \"Dung_Bontebok\"   \"Dung_Ostrich\"    \"Dung_Other\"      \"Comments\"       \n\n# Convert densiometer readings to canopy cover\npdat$CanopyCover &lt;- 100 - 4.16*pdat$Densiometer\n\n# Aggregate all the dung counts into one\npdat$Dung &lt;- pdat %&gt;% select(Dung_Eland, Dung_Bontebok, Dung_Ostrich, Dung_Other) %&gt;% rowSums()\n\n# Summarize environmental data to site level (i.e. take the average of point measurements)\nenv &lt;- pdat %&gt;% \n  group_by(Site) %&gt;%\n  summarize(BareSoil = mean(PercentBareSoil), \n            `Soil pH` = mean(SoilPH), \n            Dung = mean(Dung),\n            `% Canopy Cover` = mean(CanopyCover))\n\n# Print table\nkable(env, digits = 2)\n\n\n\n\nSite\nBareSoil\nSoil pH\nDung\n% Canopy Cover\n\n\n\n\ngrass\n2.50\n4.85\n1.50\n43.84\n\n\ninvasion\n1.25\n3.88\n0.25\n94.80\n\n\nrenosterveld\n15.50\n5.47\n6.25\n39.68\n\n\nsand\n2.75\n4.81\n0.00\n72.96\n\n\nsandstone\n13.25\n4.76\n0.00\n86.48\n\n\n\n\n\nOr point level\n\n# Summarize environmental data to site level (i.e. take the average of point measurements)\npenv &lt;- pdat %&gt;% \n  group_by(SitePoint) %&gt;%\n  summarize(BareSoil = mean(PercentBareSoil), \n            `Soil pH` = mean(SoilPH), \n            Dung = mean(Dung),\n            `% Canopy Cover` = mean(CanopyCover))\n\n# Print table\nkable(penv, digits = 2)\n\n\n\n\nSitePoint\nBareSoil\nSoil pH\nDung\n% Canopy Cover\n\n\n\n\ngrass_NE\n0\n5.13\n5\n45.92\n\n\ngrass_NW\n10\n4.57\n1\n41.76\n\n\ngrass_SE\n0\n4.60\n0\n37.60\n\n\ngrass_SW\n0\n5.11\n0\n50.08\n\n\ninvasion_NE\n5\n3.70\n0\n100.00\n\n\ninvasion_NW\n0\n4.10\n1\n91.68\n\n\ninvasion_SE\n0\n3.79\n0\n100.00\n\n\ninvasion_SW\n0\n3.93\n0\n87.52\n\n\nrenosterveld_NE\n40\n5.70\n8\n16.80\n\n\nrenosterveld_NW\n3\n5.35\n5\n20.96\n\n\nrenosterveld_SE\n2\n5.40\n5\n41.76\n\n\nrenosterveld_SW\n17\n5.43\n7\n79.20\n\n\nsand_NE\n4\n4.54\n0\n83.36\n\n\nsand_NW\n1\n4.95\n0\n54.24\n\n\nsand_SE\n3\n4.82\n0\n79.20\n\n\nsand_SW\n3\n4.94\n0\n75.04\n\n\nsandstone_NE\n25\n4.72\n0\n100.00\n\n\nsandstone_NW\n1\n4.70\n0\n58.40\n\n\nsandstone_SE\n7\n4.91\n0\n91.68\n\n\nsandstone_SW\n20\n4.70\n0\n95.84\n\n\n\n\n\nOr we can look at environmental dissimilarity among sites\nR code:\n\n# Use the environmental data to create a distance matrix among sites\nD &lt;- dist(scale(env[,2:5])) # check ?scale - what does this function do and why do you think I used it?\n\n# some tomfoolery to present it nicely... (kable() doesn't like class \"dist\" - i.e. distance objects)\nedis &lt;- as.data.frame(as.matrix(D))\ndimnames(edis) &lt;- list(env$Site, env$Site)\nedisl &lt;- edis # make a new object and keep edis, because we'll use it later\nedisl[upper.tri(edisl, diag = T)] &lt;- NA\noptions(knitr.kable.NA = '') # set table printing function to make NA values blank\n\nkable(edisl, digits = 3) # print a table\n\n\n\n\n\ngrass\ninvasion\nrenosterveld\nsand\nsandstone\n\n\n\n\ngrass\n\n\n\n\n\n\n\ninvasion\n2.719\n\n\n\n\n\n\nrenosterveld\n2.841\n4.717\n\n\n\n\n\nsand\n1.302\n1.878\n3.488\n\n\n\n\nsandstone\n2.412\n2.380\n3.271\n1.649\n\n\n\n\n\n\nOr among points\nR code:\n\n# Use the environmental data to create a distance matrix among sites\npD &lt;- dist(scale(penv[,2:5])) # check ?scale - what does this function do and why do you think I used it?\n\n# some tomfoolery to present it nicely... (kable() doesn't like class \"dist\" - i.e. distance objects)\npedis &lt;- as.data.frame(as.matrix(pD))\ndimnames(pedis) &lt;- list(penv$SitePoint, penv$SitePoint)\npedisl &lt;- pedis # make a new object and keep pedis, because we'll use it later\npedisl[upper.tri(pedisl, diag = T)] &lt;- NA\noptions(knitr.kable.NA = '') # set table printing function to make NA values blank\n\nkable(pedisl, digits = 3) # print a table\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngrass_NE\ngrass_NW\ngrass_SE\ngrass_SW\ninvasion_NE\ninvasion_NW\ninvasion_SE\ninvasion_SW\nrenosterveld_NE\nrenosterveld_NW\nrenosterveld_SE\nrenosterveld_SW\nsand_NE\nsand_NW\nsand_SE\nsand_SW\nsandstone_NE\nsandstone_NW\nsandstone_SE\nsandstone_SW\n\n\n\n\ngrass_NE\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngrass_NW\n2.034\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngrass_SE\n2.108\n1.025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ngrass_SW\n1.857\n1.442\n1.034\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninvasion_NE\n3.787\n2.725\n2.853\n3.185\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninvasion_NW\n2.918\n2.230\n2.214\n2.416\n0.990\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninvasion_SE\n3.646\n2.757\n2.722\n3.019\n0.498\n0.740\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninvasion_SW\n3.242\n2.280\n2.200\n2.547\n0.779\n0.506\n0.524\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nrenosterveld_NE\n4.199\n4.443\n5.247\n5.059\n6.493\n6.075\n6.657\n6.327\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nrenosterveld_NW\n1.039\n2.284\n2.394\n2.199\n4.568\n3.764\n4.467\n4.016\n3.715\n\n\n\n\n\n\n\n\n\n\n\n\n\nrenosterveld_SE\n0.547\n2.244\n2.365\n1.957\n4.197\n3.341\n4.073\n3.663\n3.895\n0.774\n\n\n\n\n\n\n\n\n\n\n\n\nrenosterveld_SW\n2.213\n3.113\n3.725\n3.279\n4.296\n3.680\n4.329\n4.098\n3.211\n2.622\n2.106\n\n\n\n\n\n\n\n\n\n\n\nsand_NE\n2.569\n1.670\n1.725\n1.645\n1.647\n1.006\n1.540\n1.181\n5.537\n3.293\n2.869\n3.293\n\n\n\n\n\n\n\n\n\n\nsand_NW\n1.906\n1.242\n0.887\n0.342\n2.850\n2.102\n2.697\n2.222\n5.098\n2.340\n2.076\n3.252\n1.333\n\n\n\n\n\n\n\n\n\nsand_SE\n2.305\n1.633\n1.603\n1.225\n2.182\n1.463\n2.041\n1.670\n5.357\n2.986\n2.536\n3.110\n0.540\n0.965\n\n\n\n\n\n\n\n\nsand_SW\n2.182\n1.586\n1.533\n1.007\n2.440\n1.709\n2.300\n1.913\n5.232\n2.814\n2.371\n3.043\n0.794\n0.786\n0.266\n\n\n\n\n\n\n\nsandstone_NE\n3.668\n2.603\n3.291\n3.066\n2.643\n2.654\n2.898\n2.795\n4.822\n4.176\n3.769\n3.086\n2.095\n2.846\n2.215\n2.300\n\n\n\n\n\n\nsandstone_NW\n2.062\n1.133\n0.790\n0.811\n2.403\n1.681\n2.253\n1.763\n5.280\n2.596\n2.329\n3.365\n1.002\n0.479\n0.816\n0.774\n2.727\n\n\n\n\n\nsandstone_SE\n2.615\n1.989\n2.166\n1.702\n2.228\n1.655\n2.161\n1.905\n5.294\n3.307\n2.792\n2.949\n0.791\n1.487\n0.615\n0.720\n1.756\n1.399\n\n\n\n\nsandstone_SW\n3.307\n2.240\n2.854\n2.631\n2.307\n2.213\n2.511\n2.366\n4.901\n3.864\n3.443\n2.987\n1.601\n2.395\n1.727\n1.826\n0.496\n2.256\n1.291"
  },
  {
    "objectID": "index.html#ecosystem-function-1",
    "href": "index.html#ecosystem-function-1",
    "title": "BIO3018F Ecology & Evolution - 2023 Practical",
    "section": "Ecosystem function",
    "text": "Ecosystem function\nTo explore ecosystem function we looked at the 20-year time-series of the Normalized Difference Vegetation Index (NDVI) recorded by the MODIS satellite mission. From these we used the post-fire recovery trajectory modelling framework developed by Wilson et al (2015) to derive estimates of the mean maximum NDVI (alpha + gamma), and the amplitude and timing of seasonality (big alpha and phi) as our measures of ecosystem function. Here I’ve provided a table of these parameters by site and plots of the model fits.\nR code:\n\n# source(\"prac/01_downloadNDVI.R\") # this is only run once to download the MODIS data\nsource(\"code/02_plot.NDVI.R\")\nsource(\"code/03_negexp_model.R\")\n\n###Get data\nadat &lt;- read_csv(\"data/modis.csv\")\n#adat &lt;- adat %&gt;% filter(calendar_date &gt; as.Date(\"2015-9-14\"))\n\n###Plot all timeseries\nadat %&gt;%\n  ggplot(aes(x = calendar_date, y = value*scale)) + \n  geom_line() +\n#  geom_point() +\n  facet_wrap(.~ site) +\n  ylab(\"NDVI\") +\n  ylim(0.2, 0.9)\n\n\n\n\nNow let’s fit the model and plot the model fit (blue) over the observed data (black circles).\nR code:\n\n###Loop through sites fitting the model\n\n# Get site names\nsitnms &lt;- unique(adat$site)\n\n# Set initial parameters\npar &lt;- c(alpha = 0.2, gamma = 0.4, lambda = 0.5, A = 0.1, phi = -1)\n\n# Make output table\nout &lt;- data.frame(initial = par)\n\npar(mfrow=c(2,3))\n\nfor(i in 1:length(sitnms)) {\n  \ndat &lt;- adat %&gt;% filter(site == sitnms[i])\n\n# calculate age from date\ndat$age &lt;- (as.numeric(dat$calendar_date) - min(as.numeric(dat$calendar_date), na.rm = T))/365.25\n\n# scale NDVI\ndat$NDVI &lt;- dat$value*dat$scale\n\n# fit models\nfit_negexpMLES &lt;- fit.negexpS.MLE(dat, par)\n\n# plot\nplot.NDVI(dat, ylim = c(0.1, 0.9), main = sitnms[i])\n\n# add curve with MLE parameters\nlines(dat$age, pred.negexpS(fit_negexpMLES$par,dat$age), col = 'skyblue', lwd = 3)\n\n# bind to output\nout &lt;- cbind(out, fit_negexpMLES$par)\n}\n\n\n\n# Remove unnecessary objects to keep the workspace tidy\nrm(i, par)\n\nAnd view a table of the parameter estimates\nR code:\n\n# tidy and present table\nnames(out) &lt;- c(\"initial\", sitnms)\nout &lt;- as.data.frame(t(out)[-1,])\n\n# calculate maximum greeness (alpha + gamma)\nout$alpha_gamma = out$alpha + out$gamma\n\nkable(out, digits = 3)\n\n\n\n\n\nalpha\ngamma\nlambda\nA\nphi\nalpha_gamma\n\n\n\n\nlimestone\n0.427\n0.156\n10.057\n0.056\n-1.441\n0.583\n\n\nsand\n0.343\n0.225\n4.150\n0.072\n-1.326\n0.568\n\n\ninvasion\n0.695\n0.031\n0.459\n0.054\n-1.296\n0.727\n\n\nsandstone\n0.603\n0.062\n10.539\n0.073\n-1.470\n0.666\n\n\ngrass\n0.579\n-0.016\n0.003\n0.080\n-1.762\n0.563\n\n\nrenosterveld\n0.449\n0.038\n2.670\n0.095\n-2.101\n0.487\n\n\n\n\n\n\nDiscussion hint: Are there any obvious properties of the time-series that are not captured by these parameters? How do they differ between sites and what may the causes be?\n\nOne issue here is sample size, because we only have a few sites… One could perhaps get around the sample size issue by using a satellite with finer ground sample distance that we could relate to each point location, such as Sentinel 2 (10m GSD vs MODIS 250m). I’ve extracted and plotted these data below.\n\nsent &lt;- read_csv(\"data/sentinel.csv\")\n\n###Plot all timeseries\nsent %&gt;%\n  ggplot(aes(x = calendar_date, y = value*scale)) + \n  geom_line() +\n  facet_grid(Site ~ Point) +\n  ylab(\"NDVI\")\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\nUnfortunately, as you can see the record is much shorter and there’s a lot of variability and big jumps in the NDVI value of the finer resolution instrument. We can still try to fit the model and see what we get though.\n\n###Loop through site_points fitting the model\n\n# Get joint site_point names\npntnms &lt;- sort(unique(paste0(sent$Site, \"_\", sent$Point)))\nsent$site_point &lt;- paste0(sent$Site, \"_\", sent$Point)\n\n# Set initial parameters\npar &lt;- c(alpha = 0.2, gamma = 0.4, lambda = 0.5, A = 0.1, phi = -1)\n\n# Make output table\nsout &lt;- data.frame(initial = par)\n\npar(mfrow=c(2,3))\n\nfor(i in 1:length(pntnms)) {\n  \ndat &lt;- sent %&gt;% filter(site_point == pntnms[i])\n\n# calculate age from date\ndat$age &lt;- (as.numeric(dat$calendar_date) - as.numeric(as.Date(\"19920101\", \"%Y%m%d\")))/365.25\n\n# scale NDVI\ndat$NDVI &lt;- dat$value*dat$scale\n\n# fit models\nfit_negexpMLES &lt;- fit.negexpS.MLE(dat, par)\n\n# # plot\n# plot.NDVI(dat, ylim = c(0, 1), main = sitnms[i])\n# \n# # add curve with MLE parameters\n# lines(dat$age, pred.negexpS(fit_negexpMLES$par,dat$age), col = 'skyblue', lwd = 3)\n\n# bind to output\nsout &lt;- cbind(sout, fit_negexpMLES$par)\n}\n\n# Remove unnecessary objects to keep the workspace tidy\nrm(i, par)\n\n\n# tidy and present table\nnames(sout) &lt;- c(\"initial\", pntnms)\nsout &lt;- as.data.frame(t(sout)[-1,])\nsout$alpha_gamma = sout$alpha + sout$gamma\nkable(sout, digits = 3)\n\n\n\n\n\nalpha\ngamma\nlambda\nA\nphi\nalpha_gamma\n\n\n\n\ngrass_NE\n-0.935\n1.440\n0.074\n-0.114\n0.380\n0.505\n\n\ngrass_NW\n2.464\n-1.769\n0.449\n0.090\n-2.450\n0.695\n\n\ngrass_SE\n0.149\n0.418\n0.004\n-0.127\n0.227\n0.567\n\n\ngrass_SW\n0.029\n0.645\n0.591\n-0.046\n0.320\n0.674\n\n\ninvasion_NE\n0.369\n0.361\n1.191\n0.083\n-2.395\n0.730\n\n\ninvasion_NW\n-0.025\n0.772\n1.516\n0.092\n-2.316\n0.747\n\n\ninvasion_SE\n1.505\n-0.701\n2.041\n0.055\n-2.588\n0.803\n\n\ninvasion_SW\n0.430\n0.334\n0.927\n0.098\n-2.193\n0.765\n\n\nlimestone_NE\n-2.122\n2.643\n1.825\n0.096\n-2.455\n0.521\n\n\nlimestone_NW\n0.401\n0.143\n4.159\n0.098\n-2.316\n0.544\n\n\nlimestone_SE\n0.425\n0.078\n1.064\n0.097\n-2.401\n0.504\n\n\nlimestone_SW\n-0.333\n0.824\n0.936\n0.103\n-2.265\n0.491\n\n\nrenosterveld_NE\n-2.372\n2.817\n0.009\n-0.105\n-0.002\n0.446\n\n\nrenosterveld_NW\n2.066\n-1.630\n0.032\n-0.095\n0.219\n0.436\n\n\nrenosterveld_SE\n0.163\n0.259\n0.325\n-0.077\n0.026\n0.422\n\n\nrenosterveld_SW\n0.212\n0.221\n0.463\n-0.107\n-0.010\n0.432\n\n\nsand_NE\n-1.295\n1.803\n0.839\n0.095\n-2.372\n0.509\n\n\nsand_NW\n0.339\n0.187\n1.814\n0.097\n-2.465\n0.527\n\n\nsand_SE\n0.629\n-0.193\n1.104\n0.077\n-2.183\n0.435\n\n\nsand_SW\n0.268\n0.268\n1.553\n0.123\n-2.248\n0.536\n\n\nsandstone_NE\n-0.301\n0.851\n2.707\n0.146\n-2.283\n0.550\n\n\nsandstone_NW\n0.388\n0.175\n1.426\n0.148\n-2.352\n0.564\n\n\nsandstone_SE\n0.394\n0.200\n0.917\n0.160\n-2.329\n0.594\n\n\nsandstone_SW\n0.257\n0.315\n1.274\n0.162\n-2.335\n0.571"
  },
  {
    "objectID": "index.html#plotting",
    "href": "index.html#plotting",
    "title": "BIO3018F Ecology & Evolution - 2023 Practical",
    "section": "Plotting",
    "text": "Plotting\nHere’s an example of how to make a boxplot of point location measures by site for one variable. You can make a panel of plots if you convert pdat into long format using pivot_longer() and adding + facet_wrap(~name, scales = \"free\") to the end of the plotting call (where name is whatever you provided for the names_to = argument in pivot_longer()).\nR code:\n\n# Make boxplot of any variable using point location data\npdat %&gt;% ggplot() +\n  geom_boxplot(aes(y = CanopyCover, x = Site))"
  },
  {
    "objectID": "index.html#test-for-significant-difference-among-sites",
    "href": "index.html#test-for-significant-difference-among-sites",
    "title": "BIO3018F Ecology & Evolution - 2023 Practical",
    "section": "Test for significant difference among sites",
    "text": "Test for significant difference among sites\nHere we use the non-parametric Kruskal-Wallis rank sum test.\nR code:\n\n# Run non-parametric Kruskal-Wallis rank sum test\nkruskal.test(CanopyCover ~ Site, data = pdat)\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  CanopyCover by Site\nKruskal-Wallis chi-squared = 14.246, df = 4, p-value = 0.006549\n\n\nAnd use Dunn’s posthoc test to explore where the differences lie.\nR code:\n\n# Dunn's Post hoc test to directly explore differences among sites\nposthoc &lt;- dunnTest(CanopyCover ~ Site, data = pdat,\n              method=\"bh\")\n\nWarning: Site was coerced to a factor.\n\nkable(posthoc$res, digits = 3)\n\n\n\n\nComparison\nZ\nP.unadj\nP.adj\n\n\n\n\ngrass - invasion\n-2.816\n0.005\n0.024\n\n\ngrass - renosterveld\n0.090\n0.928\n0.928\n\n\ninvasion - renosterveld\n2.906\n0.004\n0.037\n\n\ngrass - sand\n-1.318\n0.187\n0.268\n\n\ninvasion - sand\n1.498\n0.134\n0.268\n\n\nrenosterveld - sand\n-1.408\n0.159\n0.265\n\n\ngrass - sandstone\n-2.397\n0.017\n0.041\n\n\ninvasion - sandstone\n0.419\n0.675\n0.750\n\n\nrenosterveld - sandstone\n-2.487\n0.013\n0.043\n\n\nsand - sandstone\n-1.079\n0.281\n0.351"
  },
  {
    "objectID": "index.html#correlations",
    "href": "index.html#correlations",
    "title": "BIO3018F Ecology & Evolution - 2023 Practical",
    "section": "Correlations",
    "text": "Correlations\ne.g. Exploring relationships between measures of biodiversity and either environmental properties or measures of ecosystem function\nThis practical was a learning exercise and constrained by time and available resources. Perhaps the biggest drawback was the low number of (or lack of replication within) ecosystem types sampled. That said, plotting the relationships between the different site level variables gives us some indication of whether further sampling is likely to produce strong evidence of clear relationships. For this prac write up, I’ll forgive you for discussing significant (p &lt; 0.05) or near-significant (p &lt; 0.1) relationships based on a sample size of 6… Usually, this would not be okay…\n\n# Join site level measures of ecosystem function and environment\nout$Site &lt;- rownames(out)\ndat &lt;- left_join(env, out)\n\n# Plot biplots of all combinations of variables\npairs(dat[,-1])\n\n\n\n# Perform correlations of all combinations of variables\ncor.table(dat[,-1])\n\n$r\n                 BareSoil     Soil pH       Dung % Canopy Cover       alpha\nBareSoil        1.0000000  0.68026677  0.6164433     -0.2852437 -0.16312343\nSoil pH         0.6802668  1.00000000  0.7248453     -0.8102876 -0.66407328\nDung            0.6164433  0.72484535  1.0000000     -0.7640847 -0.28701325\n% Canopy Cover -0.2852437 -0.81028763 -0.7640847      1.0000000  0.43603458\nalpha          -0.1631234 -0.66407328 -0.2870132      0.4360346  1.00000000\ngamma          -0.1471386  0.05651833 -0.3269539      0.2788752 -0.73596903\nlambda          0.5870608  0.18475865 -0.2579002      0.3790214 -0.09052831\nA               0.6673584  0.97743485  0.8169335     -0.8879790 -0.53433020\nphi            -0.6139559 -0.80889039 -0.9284522      0.8896190  0.21945721\nalpha_gamma    -0.3835639 -0.92036592 -0.7414454      0.9133619  0.74937766\n                     gamma      lambda           A        phi alpha_gamma\nBareSoil       -0.14713859  0.58706080  0.66735842 -0.6139559  -0.3835639\nSoil pH         0.05651833  0.18475865  0.97743485 -0.8088904  -0.9203659\nDung           -0.32695391 -0.25790015  0.81693352 -0.9284522  -0.7414454\n% Canopy Cover  0.27887519  0.37902145 -0.88797898  0.8896190   0.9133619\nalpha          -0.73596903 -0.09052831 -0.53433020  0.2194572   0.7493777\ngamma           1.00000000  0.31418112 -0.13777024  0.4758352  -0.1032380\nlambda          0.31418112  1.00000000  0.04598951  0.1987411   0.1742770\nA              -0.13777024  0.04598951  1.00000000 -0.9126694  -0.9197706\nphi             0.47583524  0.19874115 -0.91266938  1.0000000   0.7878043\nalpha_gamma    -0.10323798  0.17427701 -0.91977061  0.7878043   1.0000000\n\n$df\n[1] 3\n\n$P\n                BareSoil     Soil pH       Dung % Canopy Cover     alpha\nBareSoil       0.0000000 0.206301935 0.26813890     0.64180332 0.7932296\nSoil pH        0.2063019 0.000000000 0.16592353     0.09631980 0.2215670\nDung           0.2681389 0.165923527 0.00000000     0.13257721 0.6396445\n% Canopy Cover 0.6418033 0.096319796 0.13257721     0.00000000 0.4629551\nalpha          0.7932296 0.221567025 0.63964451     0.46295512 0.0000000\ngamma          0.8133355 0.928076961 0.59124991     0.64958277 0.1562502\nlambda         0.2980158 0.766103280 0.67530864     0.52923211 0.8848934\nA              0.2184458 0.004055233 0.09140009     0.04424332 0.3535944\nphi            0.2706357 0.097364069 0.02272540     0.04328636 0.7228378\nalpha_gamma    0.5238855 0.026651732 0.15155037     0.03021142 0.1448180\n                   gamma    lambda           A        phi alpha_gamma\nBareSoil       0.8133355 0.2980158 0.218445820 0.27063571  0.52388546\nSoil pH        0.9280770 0.7661033 0.004055233 0.09736407  0.02665173\nDung           0.5912499 0.6753086 0.091400093 0.02272540  0.15155037\n% Canopy Cover 0.6495828 0.5292321 0.044243320 0.04328636  0.03021142\nalpha          0.1562502 0.8848934 0.353594393 0.72283778  0.14481801\ngamma          0.0000000 0.6066543 0.825141985 0.41785775  0.86878719\nlambda         0.6066543 0.0000000 0.941464984 0.74863072  0.77923205\nA              0.8251420 0.9414650 0.000000000 0.03057112  0.02694868\nphi            0.4178577 0.7486307 0.030571115 0.00000000  0.11352938\nalpha_gamma    0.8687872 0.7792321 0.026948677 0.11352938  0.00000000\n\n\nNote that these are r values and not $r^2$.\nWe can do the same for point level data:\n\n# Join site level measures of ecosystem function and environment\nsout$SitePoint &lt;- rownames(sout)\npoint_ef_env &lt;- left_join(penv, sout)\n\n# Plot biplots of all combinations of variables\npairs(point_ef_env[,-1])\n\n\n\n# Perform correlations of all combinations of variables\ncor.table(point_ef_env[,-1])\n\n$r\n                  BareSoil    Soil pH       Dung % Canopy Cover       alpha\nBareSoil        1.00000000  0.4002522  0.4554606   -0.086402836 -0.43729628\nSoil pH         0.40025216  1.0000000  0.6914337   -0.665191748 -0.29851259\nDung            0.45546063  0.6914337  1.0000000   -0.569003732 -0.29848883\n% Canopy Cover -0.08640284 -0.6651917 -0.5690037    1.000000000  0.05619548\nalpha          -0.43729628 -0.2985126 -0.2984888    0.056195483  1.00000000\ngamma           0.41328444  0.2077338  0.2401209   -0.001376732 -0.99366394\nlambda         -0.01453807 -0.4934031 -0.6115792    0.721184980  0.10938317\nA              -0.05823843 -0.5328680 -0.7480129    0.693288926  0.19424282\nphi             0.09319161  0.6653218  0.7126024   -0.705412014 -0.24599872\nalpha_gamma    -0.31996138 -0.8448857 -0.5719249    0.476797709  0.32260766\n                      gamma      lambda           A         phi alpha_gamma\nBareSoil        0.413284443 -0.01453807 -0.05823843  0.09319161  -0.3199614\nSoil pH         0.207733797 -0.49340310 -0.53286798  0.66532178  -0.8448857\nDung            0.240120867 -0.61157920 -0.74801285  0.71260240  -0.5719249\n% Canopy Cover -0.001376732  0.72118498  0.69328893 -0.70541201   0.4767977\nalpha          -0.993663936  0.10938317  0.19424282 -0.24599872   0.3226077\ngamma           1.000000000 -0.06885737 -0.15184940  0.19669874  -0.2141808\nlambda         -0.068857366  1.00000000  0.75997715 -0.76065364   0.3707474\nA              -0.151849404  0.75997715  1.00000000 -0.94242005   0.4093241\nphi             0.196698742 -0.76065364 -0.94242005  1.00000000  -0.4814242\nalpha_gamma    -0.214180799  0.37074742  0.40932408 -0.48142421   1.0000000\n\n$df\n[1] 18\n\n$P\n                 BareSoil      Soil pH         Dung % Canopy Cover        alpha\nBareSoil       0.00000000 8.034541e-02 0.0435860921   0.7172000991 5.384315e-02\nSoil pH        0.08034541 0.000000e+00 0.0007339015   0.0013721920 2.011020e-01\nDung           0.04358609 7.339015e-04 0.0000000000   0.0088373599 2.011396e-01\n% Canopy Cover 0.71720010 1.372192e-03 0.0088373599   0.0000000000 8.139625e-01\nalpha          0.05384315 2.011020e-01 0.2011396065   0.8139624771 0.000000e+00\ngamma          0.07010663 3.794887e-01 0.3078578891   0.9954038446 1.527571e-18\nlambda         0.95149243 2.705323e-02 0.0041652350   0.0003328406 6.461908e-01\nA              0.80731876 1.555879e-02 0.0001492382   0.0007004635 4.118707e-01\nphi            0.69595799 1.368145e-03 0.0004222358   0.0005121244 2.958022e-01\nalpha_gamma    0.16905409 2.771555e-06 0.0084191996   0.0335391096 1.653587e-01\n                      gamma       lambda            A          phi  alpha_gamma\nBareSoil       7.010663e-02 0.9514924307 8.073188e-01 6.959580e-01 1.690541e-01\nSoil pH        3.794887e-01 0.0270532315 1.555879e-02 1.368145e-03 2.771555e-06\nDung           3.078579e-01 0.0041652350 1.492382e-04 4.222358e-04 8.419200e-03\n% Canopy Cover 9.954038e-01 0.0003328406 7.004635e-04 5.121244e-04 3.353911e-02\nalpha          1.527571e-18 0.6461908326 4.118707e-01 2.958022e-01 1.653587e-01\ngamma          0.000000e+00 0.7729994536 5.227658e-01 4.058672e-01 3.645355e-01\nlambda         7.729995e-01 0.0000000000 1.010561e-04 9.878800e-05 1.075658e-01\nA              5.227658e-01 0.0001010561 0.000000e+00 5.356282e-10 7.310845e-02\nphi            4.058672e-01 0.0000987880 5.356282e-10 0.000000e+00 3.162135e-02\nalpha_gamma    3.645355e-01 0.1075657846 7.310845e-02 3.162135e-02 0.000000e+00"
  },
  {
    "objectID": "index.html#test-relationship-among-distance-matrices",
    "href": "index.html#test-relationship-among-distance-matrices",
    "title": "BIO3018F Ecology & Evolution - 2023 Practical",
    "section": "Test relationship among distance matrices",
    "text": "Test relationship among distance matrices\nWhen working with measures of beta diversity you are automatically dealing with distance matrices (i.e. the difference between two or more samples) rather than tables of point estimates (i.e site specific measures of biodiversity etc). A major problem with distance matrices is that each sample is represented more than once (usually the total number of samples minus 1) in the distance matrix, which means that the entries in the distance matrix are not independent. This violates a major assumption of most traditional statistics. For example, one cannot apply a linear model to the graph below, because each site is represented multiple times in the points on the graph (e.g. Sandstone vs Sand, Sandstone vs Renosterveld, Standstone vs Grass, etc.\n\nplot(as.dist(msampBFD[rownames(edis),colnames(edis)]) ~ as.dist(edis), ylab = \"Functional Beta Diversity\", xlab = \"Environmental dissimilarity\")\n\n\n\n\nIn this case we need to use methods that can explore correlations among distance matrices. Perhaps the most common of these is Mantel’s test, which in this case gives:\n\nmantel(msampBFD[rownames(edis),colnames(edis)],edis)\n\n\nMantel statistic based on Pearson's product-moment correlation \n\nCall:\nmantel(xdis = msampBFD[rownames(edis), colnames(edis)], ydis = edis) \n\nMantel statistic r: -0.07351 \n      Significance: 0.55 \n\nUpper quantiles of permutations (null model):\n  90%   95% 97.5%   99% \n0.378 0.472 0.593 0.612 \nPermutation: free\nNumber of permutations: 119"
  },
  {
    "objectID": "index.html#testing-for-grouping-of-similarity-among-points-within-sites-using-analysis-of-variance-using-distance-matrices-adonis",
    "href": "index.html#testing-for-grouping-of-similarity-among-points-within-sites-using-analysis-of-variance-using-distance-matrices-adonis",
    "title": "BIO3018F Ecology & Evolution - 2023 Practical",
    "section": "Testing for grouping of similarity among points within sites using analysis of variance using distance matrices (ADONIS)",
    "text": "Testing for grouping of similarity among points within sites using analysis of variance using distance matrices (ADONIS)\nADONIS was developed to deal with the same issue of non-independence among data points.\nThis is a somewhat spurious example, because we’d be surprised if the species composition of our point samples weren’t more similar within than between sites, but the method may be handy for other analyses. see ?adonis for details.\nR code:\n\n# split the row names into a dataframe with separate columns for site and point\ngroup_var &lt;- separate(as.data.frame(row.names(point_comm)), col = 1, into = c(\"site\", \"point\"), sep = \"_\")\n\n# run adonis analysis and report results\nadonis2(point_comm ~ site, data = group_var, permutations = 999, method = \"bray\")\n\nPermutation test for adonis under reduced model\nPermutation: free\nNumber of permutations: 999\n\nadonis2(formula = point_comm ~ site, data = group_var, permutations = 999, method = \"bray\")\n         Df SumOfSqs     R2      F Pr(&gt;F)    \nModel     4   3.8518 0.6135 5.9525  0.001 ***\nResidual 15   2.4266 0.3865                  \nTotal    19   6.2784 1.0000                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nNote that the test above calculates the distances from a community data matrix using the specified method fed to the function (“bray” in this case, which is Bray-Curtis distance, but since all abundance values are 1, this is just Sorenson’s coefficient).\nYou can also feed the function a distance matrix. Here I test whether the environmental dissimilarity of our point samples is greater within than between sites by feeding the function the pedis environmental distance matrix we made earlier. Note that I remake the grouping variable from the names of the distance object to make sure that they align.\nR code:\n\n# split the row names into a dataframe with separate columns for site and point\ngroup_var_pedis &lt;- separate(as.data.frame(names(pedis)), col = 1, into = c(\"site\", \"point\"), sep = \"_\")\n\n\n# run adonis analysis and report results\nadonis2(pedis ~ site, data = group_var_pedis, permutations = 999)\n\nPermutation test for adonis under reduced model\nPermutation: free\nNumber of permutations: 999\n\nadonis2(formula = pedis ~ site, data = group_var_pedis, permutations = 999)\n         Df SumOfSqs      R2      F Pr(&gt;F)    \nModel     4   52.468 0.69037 8.3611  0.001 ***\nResidual 15   23.532 0.30963                  \nTotal    19   76.000 1.00000                  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  }
]